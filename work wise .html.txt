<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WorkWise - منصة التوظيف</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            color: #333;
        }

        .logo-bg {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0.1;
            z-index: -1;
            width: 400px;
            height: 400px;
            background: url('data:image/svg+xml,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><path d="M20 20 L40 20 L50 40 L60 20 L80 20 L80 80 L60 80 L60 50 L50 70 L40 50 L40 80 L20 80 Z" fill="white"/><polygon points="85,20 95,20 95,80 85,80" fill="white"/></svg>') no-repeat center;
            background-size: contain;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
            z-index: 1;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .logo {
            display: inline-flex;
            align-items: center;
            gap: 15px;
            font-size: 2.5rem;
            font-weight: bold;
            color: #2a5298;
            margin-bottom: 10px;
        }

        .logo-icon {
            width: 50px;
            height: 50px;
            background: #2a5298;
            color: white;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }

        .nav-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-top: 20px;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary {
            background: linear-gradient(45deg, #2a5298, #1e3c72);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(42, 82, 152, 0.4);
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.2);
            color: #2a5298;
            border: 2px solid #2a5298;
        }

        .btn-secondary:hover {
            background: #2a5298;
            color: white;
        }

        .section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            display: none;
        }

        .section.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .job-card {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border: 1px solid #dee2e6;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .job-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(45deg, #2a5298, #1e3c72);
        }

        .job-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(42, 82, 152, 0.2);
        }

        .job-title {
            color: #2a5298;
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .job-details {
            line-height: 1.8;
            margin-bottom: 20px;
            color: #555;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #2a5298;
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            outline: none;
            border-color: #2a5298;
            box-shadow: 0 0 0 3px rgba(42, 82, 152, 0.1);
        }

        .record-controls {
            display: flex;
            gap: 10px;
            align-items: center;
            margin-top: 10px;
        }

        .record-btn {
            padding: 8px 15px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .record-btn.start {
            background: #28a745;
            color: white;
        }

        .record-btn.stop {
            background: #dc3545;
            color: white;
        }

        .admin-panel {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            margin-top: 20px;
        }

        .applicant-card {
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .applicant-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn-warning {
            background: #ffc107;
            color: #212529;
        }

        .login-form {
            max-width: 400px;
            margin: 0 auto;
            text-align: center;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            max-width: 600px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }

        .audio-player {
            width: 100%;
            margin-top: 10px;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
            margin-left: 10px;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-approved {
            background: #d4edda;
            color: #155724;
        }

        .status-rejected {
            background: #f8d7da;
            color: #721c24;
        }

        @media (max-width: 768px) {
            .nav-buttons {
                flex-direction: column;
                align-items: center;
            }
            
            .applicant-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="logo-bg"></div>
    
    <div class="container">
        <header class="header">
            <div class="logo">
                <div class="logo-icon">W</div>
                WorkWise
            </div>
            <p style="color: #666; font-size: 1.1rem;">منصتك المتخصصة للعثور على الوظيفة المثالية</p>
            
            <div class="nav-buttons">
                <button class="btn btn-primary" onclick="showSection('jobs')">الوظائف المتاحة</button>
                <button class="btn btn-secondary" onclick="showSection('login')">لوحة الموظفين</button>
            </div>
        </header>

        <!-- قسم الوظائف -->
        <div id="jobs" class="section active">
            <h2 style="text-align: center; color: #2a5298; margin-bottom: 30px; font-size: 2rem;">الوظائف المتاحة</h2>
            
            <!-- وظيفة Concentrix -->
            <div class="job-card">
                <h3 class="job-title">Customer Service Representatives - Concentrix</h3>
                <div class="job-details">
                    <p><strong>المتطلبات:</strong></p>
                    <p>• إتقان اللغة الإنجليزية B2 أو C1</p>
                    <p>• خريجين فقط ومصريين الجنسية</p>
                    <p>• الراتب من 14,000 إلى 19,000 جنيه + بدل ليلي + تدريب مدفوع</p>
                    <p>• نظام الورديات دوراني 24/7 (ليلي بشكل أساسي)</p>
                    <p>• 9 ساعات عمل شاملة ساعة راحة</p>
                    <p>• تأمين طبي واجتماعي إجباري</p>
                    <p><strong>المواقع:</strong></p>
                    <p>• 6 أكتوبر - Palm Strip, حي المتميز (أمام جامعة MUST)</p>
                    <p>• المعادي - Victoria Square</p>
                </div>
                <button class="btn btn-primary" onclick="applyForJob('Concentrix Customer Service')">تقدم الآن</button>
            </div>

            <!-- وظيفة Proof Health -->
            <div class="job-card">
                <h3 class="job-title">Customer Service - Proof Health السعودية</h3>
                <div class="job-details">
                    <p><strong>طبيعة العمل:</strong> أونلاين من المنزل</p>
                    <p><strong>المتطلبات:</strong></p>
                    <p>• خبرة سابقة في خدمة العملاء أو المبيعات (سنتين على الأقل)</p>
                    <p>• مهارات تواصل ممتازة وقدرة على التعامل مع العملاء</p>
                    <p>• القدرة على العمل تحت الضغط</p>
                    <p>• توفر لاب توب واتصال إنترنت مناسب</p>
                    <p><strong>الراتب:</strong> 8,000 جنيه (5,000 ثابت + 3,000 تارجت شهري)</p>
                    <p><strong>ساعات العمل:</strong> 6 أيام أسبوعياً، 9 ساعات يومياً</p>
                    <p>• يُفضل سورية أو مصرية تتقن اللهجة الخليجية</p>
                </div>
                <button class="btn btn-primary" onclick="applyForJob('Proof Health Customer Service')">تقدم الآن</button>
            </div>

            <!-- وظيفة HSBC -->
            <div class="job-card">
                <h3 class="job-title">HSBC Call Center</h3>
                <div class="job-details">
                    <p><strong>المتطلبات:</strong></p>
                    <p>• إتقان اللغة الإنجليزية (مستوى B2+)</p>
                    <p>• ذكور وإناث (الحد الأقصى للعمر: 35 سنة)</p>
                    <p>• خريجين فقط / مصريين فقط</p>
                    <p>• لا تتطلب خبرة (حد أقصى سنتين بعد التخرج)</p>
                    <p><strong>المزايا:</strong></p>
                    <p>• الراتب: حتى 15,700 جنيه (إجمالي)</p>
                    <p>• تدريب مدفوع</p>
                    <p>• تأمين طبي واجتماعي إجباري</p>
                    <p>• توفير مواصلات</p>
                    <p><strong>موقع العمل:</strong> Smart Village</p>
                    <p><strong>نظام العمل:</strong> 5 أيام عمل، ورديات دورانية، 9 ساعات شاملة ساعة راحة</p>
                </div>
                <button class="btn btn-primary" onclick="applyForJob('HSBC Call Center')">تقدم الآن</button>
            </div>

            <!-- وظيفة Real Estate -->
            <div class="job-card">
                <h3 class="job-title">Real Estate Acquisition Specialist</h3>
                <div class="job-details">
                    <p><strong>طبيعة العمل:</strong> العمل من المنزل بالكامل</p>
                    <p><strong>المتطلبات:</strong></p>
                    <p>• مستوى إنجليزية قوي B2</p>
                    <p>• خبرة لا تقل عن 6 أشهر في المبيعات (يُفضل العقارات)</p>
                    <p>• خبرة في المكالمات الباردة وتحديد المواعيد</p>
                    <p>• اتصال إنترنت مستقر وكمبيوتر شخصي وسماعة</p>
                    <p><strong>المزايا:</strong></p>
                    <p>• الراتب: 4.2$ للساعة + عمولة بالدولار</p>
                    <p>• 40 ساعة أسبوعياً</p>
                    <p>• التوقيت: المناطق الزمنية الأمريكية</p>
                    <p>• 5 أيام عمل + يومين راحة</p>
                    <p><strong>المسؤوليات:</strong></p>
                    <p>• متابعة عملاء PPC</p>
                    <p>• جمع وتأكيد المعلومات من أصحاب المنازل</p>
                    <p>• بناء علاقات مع العملاء المحتملين</p>
                </div>
                <button class="btn btn-primary" onclick="applyForJob('Real Estate Acquisition')">تقدم الآن</button>
            </div>
        </div>

        <!-- نموذج تسجيل الدخول -->
        <div id="login" class="section">
            <div class="login-form">
                <h2 style="color: #2a5298; margin-bottom: 30px;">تسجيل دخول الموظفين</h2>
                <div class="form-group">
                    <label>كلمة المرور:</label>
                    <input type="password" id="adminPassword" placeholder="أدخل كلمة المرور">
                </div>
                <button class="btn btn-primary" onclick="adminLogin()">دخول</button>
            </div>
        </div>

        <!-- لوحة الإدارة -->
        <div id="admin" class="section">
            <div class="admin-panel">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
                    <h2 style="color: #2a5298;">لوحة إدارة المتقدمين</h2>
                    <button class="btn btn-secondary" onclick="logout()">تسجيل خروج</button>
                </div>
                
                <div id="applicantsList">
                    <!-- سيتم عرض المتقدمين هنا -->
                </div>
            </div>
        </div>
    </div>

    <!-- نافذة التقديم -->
    <div id="applicationModal" class="modal">
        <div class="modal-content">
            <h3 id="modalJobTitle" style="color: #2a5298; margin-bottom: 20px;"></h3>
            <form id="applicationForm">
                <div class="form-group">
                    <label>الاسم الكامل *</label>
                    <input type="text" id="applicantName" required>
                </div>
                
                <div class="form-group">
                    <label>البريد الإلكتروني *</label>
                    <input type="email" id="applicantEmail" required>
                </div>
                
                <div class="form-group">
                    <label>رقم الهاتف *</label>
                    <input type="tel" id="applicantPhone" required>
                </div>
                
                <div class="form-group" id="photoGroup" style="display: none;">
                    <label>الصورة الشخصية *</label>
                    <input type="file" id="applicantPhoto" accept="image/*">
                </div>
                
                <div class="form-group">
                    <label>الخبرات والملاحظات *</label>
                    <textarea id="applicantExperience" rows="4" placeholder="اكتب خبراتك ومؤهلاتك..." required></textarea>
                </div>
                
                <div class="form-group">
                    <label>تسجيل صوتي للتعريف بنفسك *</label>
                    <div class="record-controls">
                        <button type="button" class="record-btn start" id="startRecord" onclick="startRecording()">بدء التسجيل</button>
                        <button type="button" class="record-btn stop" id="stopRecord" onclick="stopRecording()" disabled>إيقاف التسجيل</button>
                        <span id="recordingTime">00:00</span>
                    </div>
                    <audio id="audioPreview" class="audio-player" controls style="display: none;"></audio>
                </div>
                
                <div style="display: flex; gap: 10px; justify-content: center; margin-top: 30px;">
                    <button type="submit" class="btn btn-primary">إرسال التقديم</button>
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">إلغاء</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // قاعدة بيانات مشتركة عبر الخادم (محاكاة)
        // في الواقع هذه ستكون قاعدة بيانات حقيقية
        window.sharedDatabase = window.sharedDatabase || {
            applicants: [
                // بيانات تجريبية للتوضيح
                {
                    id: 1,
                    jobTitle: 'HSBC Call Center',
                    name: 'أحمد محمد علي',
                    email: 'ahmed.mohamed@email.com',
                    phone: '01234567890',
                    photo: 'ahmed_photo.jpg',
                    experience: 'خبرة 3 سنوات في خدمة العملاء والمبيعات',
                    audioRecording: 'تسجيل صوتي مرفق',
                    status: 'pending',
                    appliedAt: new Date().toLocaleString('ar-EG')
                },
                {
                    id: 2,
                    jobTitle: 'Concentrix Customer Service',
                    name: 'فاطمة سمير',
                    email: 'fatma.samir@email.com',
                    phone: '01098765432',
                    photo: null,
                    experience: 'خريجة جديدة، إنجليزية ممتازة',
                    audioRecording: 'تسجيل صوتي مرفق',
                    status: 'approved',
                    appliedAt: new Date().toLocaleString('ar-EG')
                }
            ]
        };

        // ربط البيانات المحلية بقاعدة البيانات المشتركة
        let applicants = window.sharedDatabase.applicants;
        // بيانات التطبيق
        let currentJob = '';
        let isRecording = false;
        let mediaRecorder;
        let audioChunks = [];
        let recordingInterval;
        let recordingStartTime;

        // عرض الأقسام
        function showSection(sectionId) {
            document.querySelectorAll('.section').forEach(section => {
                section.classList.remove('active');
            });
            document.getElementById(sectionId).classList.add('active');
        }

        // التقديم على وظيفة
        function applyForJob(jobTitle) {
            currentJob = jobTitle;
            document.getElementById('modalJobTitle').textContent = 'التقديم على: ' + jobTitle;
            
            // إظهار أو إخفاء حقل الصورة حسب الوظيفة
            const photoGroup = document.getElementById('photoGroup');
            const photoInput = document.getElementById('applicantPhoto');
            
            if (jobTitle === 'HSBC Call Center') {
                photoGroup.style.display = 'block';
                photoInput.required = true;
            } else {
                photoGroup.style.display = 'none';
                photoInput.required = false;
            }
            
            document.getElementById('applicationModal').classList.add('active');
        }

        // إغلاق النافذة المنبثقة
        function closeModal() {
            document.getElementById('applicationModal').classList.remove('active');
            document.getElementById('applicationForm').reset();
            stopRecording();
        }

        // بدء التسجيل الصوتي
        async function startRecording() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
                mediaRecorder = new MediaRecorder(stream);
                audioChunks = [];

                mediaRecorder.ondataavailable = (event) => {
                    audioChunks.push(event.data);
                };

                mediaRecorder.onstop = () => {
                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                    const audioUrl = URL.createObjectURL(audioBlob);
                    const audioPreview = document.getElementById('audioPreview');
                    audioPreview.src = audioUrl;
                    audioPreview.style.display = 'block';
                };

                mediaRecorder.start();
                isRecording = true;
                recordingStartTime = Date.now();
                
                document.getElementById('startRecord').disabled = true;
                document.getElementById('stopRecord').disabled = false;
                
                // عداد الوقت
                recordingInterval = setInterval(updateRecordingTime, 1000);
                
            } catch (error) {
                alert('لا يمكن الوصول للميكروفون. تأكد من السماح بالوصول.');
            }
        }

        // إيقاف التسجيل
        function stopRecording() {
            if (mediaRecorder && isRecording) {
                mediaRecorder.stop();
                mediaRecorder.stream.getTracks().forEach(track => track.stop());
                isRecording = false;
                
                document.getElementById('startRecord').disabled = false;
                document.getElementById('stopRecord').disabled = true;
                
                clearInterval(recordingInterval);
            }
        }

        // تحديث وقت التسجيل
        function updateRecordingTime() {
            if (isRecording) {
                const elapsed = Math.floor((Date.now() - recordingStartTime) / 1000);
                const minutes = Math.floor(elapsed / 60);
                const seconds = elapsed % 60;
                document.getElementById('recordingTime').textContent = 
                    `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            }
        }

        // إرسال التقديم
        document.getElementById('applicationForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const audioPreview = document.getElementById('audioPreview');
            if (!audioPreview.src) {
                alert('يجب تسجيل مقطع صوتي للتعريف بنفسك');
                return;
            }

            // التحقق من الصورة إذا كانت مطلوبة
            const photoInput = document.getElementById('applicantPhoto');
            if (photoInput.required && !photoInput.files[0]) {
                alert('يجب رفع صورة شخصية لهذه الوظيفة');
                return;
            }

            const formData = {
                id: Date.now(),
                jobTitle: currentJob,
                name: document.getElementById('applicantName').value,
                email: document.getElementById('applicantEmail').value,
                phone: document.getElementById('applicantPhone').value,
                photo: photoInput.files[0] ? photoInput.files[0].name : null,
                experience: document.getElementById('applicantExperience').value,
                audioRecording: 'تسجيل صوتي مرفق',
                status: 'pending',
                appliedAt: new Date().toLocaleString('ar-EG')
            };

            // إضافة المتقدم للقائمة المشتركة
            applicants.push(formData);
            // تحديث قاعدة البيانات المشتركة
            window.sharedDatabase.applicants = applicants;
            
            // محاكاة إرسال البيانات للخادم
            console.log('تم حفظ البيانات في قاعدة البيانات المشتركة:', formData);
            
            alert('تم إرسال طلب التقديم بنجاح! سيتم مراجعته والرد عليك قريباً.');
            closeModal();
        });

        // تسجيل دخول الإدارة
        function adminLogin() {
            const password = document.getElementById('adminPassword').value;
            if (password === 'workwise123456') {
                showSection('admin');
                loadApplicants();
            } else {
                alert('كلمة المرور غير صحيحة');
            }
        }

        // تسجيل خروج
        function logout() {
            showSection('jobs');
            document.getElementById('adminPassword').value = '';
        }

        // تحميل المتقدمين
        function loadApplicants() {
            const applicantsList = document.getElementById('applicantsList');
            
            if (applicants.length === 0) {
                applicantsList.innerHTML = '<p style="text-align: center; color: #666;">لا توجد طلبات تقديم حتى الآن</p>';
                return;
            }

            applicantsList.innerHTML = applicants.map(applicant => `
                <div class="applicant-card">
                    <div style="display: flex; justify-content: between; align-items: start; margin-bottom: 15px;">
                        <div>
                            <h4 style="color: #2a5298; margin-bottom: 5px;">${applicant.name}</h4>
                            <p style="color: #666; font-size: 14px;">تقدم على: ${applicant.jobTitle}</p>
                            <span class="status-badge status-${applicant.status}">
                                ${applicant.status === 'pending' ? 'قيد المراجعة' : 
                                  applicant.status === 'approved' ? 'مقبول' : 'مرفوض'}
                            </span>
                        </div>
                        ${applicant.photo ? `
                        <div style="margin-right: 20px;">
                            <strong>الصورة الشخصية:</strong><br>
                            <div style="width: 80px; height: 80px; background: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; margin-top: 5px;">
                                📷 ${applicant.photo}
                            </div>
                        </div>
                        ` : ''}
                    </div>
                    
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">
                        <div>
                            <strong>البريد الإلكتروني:</strong><br>
                            <a href="mailto:${applicant.email}">${applicant.email}</a>
                        </div>
                        <div>
                            <strong>رقم الهاتف:</strong><br>
                            <a href="tel:${applicant.phone}">${applicant.phone}</a>
                        </div>
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <strong>الخبرات والملاحظات:</strong><br>
                        <p style="background: #f8f9fa; padding: 10px; border-radius: 5px; margin-top: 5px;">${applicant.experience}</p>
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <strong>تاريخ التقديم:</strong> ${applicant.appliedAt}
                    </div>
                    
                    <div class="applicant-actions">
                        <button class="btn btn-success" onclick="updateStatus(${applicant.id}, 'approved')" 
                                ${applicant.status === 'approved' ? 'disabled' : ''}>
                            ✓ قبول
                        </button>
                        <button class="btn btn-danger" onclick="updateStatus(${applicant.id}, 'rejected')"
                                ${applicant.status === 'rejected' ? 'disabled' : ''}>
                            ✗ رفض
                        </button>
                        <button class="btn btn-warning" onclick="deleteApplicant(${applicant.id})">
                            🗑 حذف
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // تحديث حالة المتقدم
        function updateStatus(applicantId, newStatus) {
            const applicantIndex = applicants.findIndex(app => app.id === applicantId);
            if (applicantIndex !== -1) {
                applicants[applicantIndex].status = newStatus;
                // تحديث قاعدة البيانات المشتركة
                window.sharedDatabase.applicants = applicants;
                loadApplicants();
                
                const statusText = newStatus === 'approved' ? 'تم قبول' : 'تم رفض';
                alert(`${statusText} المتقدم بنجاح`);
            }
        }

        // حذف متقدم
        function deleteApplicant(applicantId) {
            if (confirm('هل أنت متأكد من حذف هذا المتقدم؟')) {
                applicants = applicants.filter(app => app.id !== applicantId);
                // تحديث قاعدة البيانات المشتركة
                window.sharedDatabase.applicants = applicants;
                loadApplicants();
                alert('تم حذف المتقدم بنجاح');
            }
        }

        // إغلاق النافذة عند النقر خارجها
        document.getElementById('applicationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        // تحديث البيانات بشكل دوري من قاعدة البيانات المشتركة
        function refreshData() {
            applicants = window.sharedDatabase.applicants;
            if (document.getElementById('admin').classList.contains('active')) {
                loadApplicants();
            }
        }

        // تحديث البيانات كل 3 ثوانٍ للحصول على أحدث البيانات
        setInterval(refreshData, 3000);

        // تحميل البيانات عند تحميل الصفحة
        document.addEventListener('DOMContentLoaded', function() {
            // تحديث البيانات من قاعدة البيانات المشتركة
            refreshData();
            console.log('الموقع جاهز للاستخدام - البيانات متزامنة');
        });
    </script>

    <!-- Footer -->
    <footer style="background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); color: white; text-align: center; padding: 20px; margin-top: 50px; border-radius: 15px;">
        <p style="margin: 0; font-size: 14px; opacity: 0.8;">
            إنشاء المهندس أحمد التركي
        </p>
    </footer>
</body>
</html>
